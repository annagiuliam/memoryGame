[{"/home/annagiuliam/Documents/odin/react/memory-game/src/index.js":"1","/home/annagiuliam/Documents/odin/react/memory-game/src/App.js":"2","/home/annagiuliam/Documents/odin/react/memory-game/src/components/cats.js":"3","/home/annagiuliam/Documents/odin/react/memory-game/src/components/card.js":"4","/home/annagiuliam/Documents/odin/react/memory-game/src/components/wrapper.js":"5","/home/annagiuliam/Documents/odin/react/memory-game/src/components/header.js":"6"},{"size":221,"mtime":1609749595575,"results":"7","hashOfConfig":"8"},{"size":1950,"mtime":1609847230292,"results":"9","hashOfConfig":"8"},{"size":1328,"mtime":1609922764258,"results":"10","hashOfConfig":"8"},{"size":221,"mtime":1609756782623,"results":"11","hashOfConfig":"8"},{"size":149,"mtime":1609755670543,"results":"12","hashOfConfig":"8"},{"size":408,"mtime":1609922851533,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1kg6cj9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/annagiuliam/Documents/odin/react/memory-game/src/index.js",[],["30","31"],"/home/annagiuliam/Documents/odin/react/memory-game/src/App.js",["32"],"import React, {useState, useEffect} from 'react';\nimport {shuffle} from 'lodash';\nimport catArr from './components/cats';\nimport './App.css';\nimport Card from './components/card';\nimport Wrapper from './components/wrapper';\nimport Header from './components/header';\n\nfunction App() {\n  const [cats, setCats] = useState(catArr);\n  const  [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    if (score === cats.length) { \n      alert(\"You won!\")\n      setHighScore(score)\n      setScore(0)\n      resetCats();\n      shuffleArray(cats);\n    }\n  })\n\n  function handleClick(catId) {\n    const clickedCat = cats.find((cat) => cat.id === catId);\n    (! clickedCat.clicked ) ?  handleScore(clickedCat) :  handleLose();\n   \n  }\n\n  function handleScore(clickedCat) {    \n    setScore(score + 1); \n    clickCat(clickedCat);\n    shuffleArray(cats);    \n  }\n\n  function handleLose() {\n    if (score > highScore) {\n      setHighScore(score) \n    }   \n    setScore(0);\n    resetCats();\n    alert(\"You lost, try again!\")\n    shuffleArray(cats);\n  }\n\n  function resetCats() {\n    const newCats = cats.map((cat) => {\n      cat.clicked = false\n      return cat;\n    });\n    setCats(newCats)\n  }\n\n  function clickCat(clickedCat) { \n    const newCats = cats.map((cat) => {\n      if (cat.id === clickedCat.id) {\n        cat.clicked = true;\n      }\n      return cat\n    })\n    setCats(newCats);\n  }\n\n  function shuffleArray(array) {\n    const newArr = shuffle(array)\n    setCats(newArr);\n  }\n\n  return (\n    <Wrapper>\n      <Header \n        score={score}\n        highScore={highScore} />\n      <div className=\"cards-container\">\n        {cats.map((cat) => {\n            return (\n              <Card \n              cat={cat}\n              key={cat.id}\n              onClick={() => handleClick(cat.id)}></Card>\n            )\n          })}\n      </div>\n         \n        \n      \n      </Wrapper>\n  );\n}\n\nexport default App;\n","/home/annagiuliam/Documents/odin/react/memory-game/src/components/cats.js",[],"/home/annagiuliam/Documents/odin/react/memory-game/src/components/card.js",["33"],"import React from 'react';\n\n\nconst Card = (props) => {\n    return (\n        <div className=\"card-container\" onClick={props.onClick}>\n            <img src={props.cat.src}></img>\n        </div>\n    )\n}\n\nexport default Card;","/home/annagiuliam/Documents/odin/react/memory-game/src/components/wrapper.js",[],["34","35"],"/home/annagiuliam/Documents/odin/react/memory-game/src/components/header.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":14,"column":3,"nodeType":"42","endLine":14,"endColumn":12,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":7,"column":13,"nodeType":"46","endLine":7,"endColumn":38},{"ruleId":"36","replacedBy":"47"},{"ruleId":"38","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setHighScore'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [score, cats, resetCats] as a second argument to the useEffect Hook.","Identifier",["51"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Add dependencies array: [score, cats, resetCats]",{"range":"54","text":"55"},[596,596],", [score, cats, resetCats]"]